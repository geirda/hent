#!/bin/sh

OS=$(uname)
VERT=$(uname -m)
KJERNE=$(uname -r)
OPPETID="$(uptime|cut -f 1,2 -d','|sed 's/^.*up\ //')"

case "$OS" in
OpenBSD)
	fg="\033[00m"
	red="\033[1;31m"
	green="\033[1;32m"
	yellow="\033[1;33m"
	blue="\033[1;34m"
	purple="\033[1;35m"
	cyan="\033[1;36m"
	white="\033[1;37m"
	PAKKER=$(pkg_info|wc -l|awk '{print $1}')
	KJERNE=$(uname -rv)
	MINNE="$(top -d 1|awk '/Mem/{print $3}'|egrep -o '^[^/]+') / $(awk '/real mem/{print $5}' /var/run/dmesg.boot|sed 's/[(B)]//g')"
	;;
NetBSD)
	if [ -x "$(command -v tput)" ]; then
		reset="$(tput sgr0)"
		bold="$(tput bold)"
		color0="$(tput setaf 0)"
		color1="$(tput setaf 1)"
		color2="$(tput setaf 2)"
		color3="$(tput setaf 3)"
		color4="$(tput setaf 4)"
		color5="$(tput setaf 5)"
		color6="$(tput setaf 6)"
		color7="$(tput setaf 7)"
	fi
	fg="${reset}"
	black="${reset}${bold}${color0}"
	red="${reset}${bold}${color1}"
	green="${reset}${bold}${color2}"
	yellow="${reset}${bold}${color3}"
	blue="${reset}${bold}${color4}"
	purple="${reset}${bold}${color5}"
	cyan="${reset}${bold}${color6}"
	white="${reset}${bold}${color7}"
	PAKKER=$(pkgin list|wc -l|awk '{print $1}')
	MINNE="$(top -d 1|awk '/Mem/{print $2}') / $(awk '/total memory/{print $4}' /var/run/dmesg.boot)M"
	;;
*BSD)
	if [ -x "$(command -v tput)" ]; then
		reset="$(tput me)"
		bold="$(tput md)"
		color0="$(tput AF 0)"
		color1="$(tput AF 1)"
		color2="$(tput AF 2)"
		color3="$(tput AF 3)"
		color4="$(tput AF 4)"
		color5="$(tput AF 5)"
		color6="$(tput AF 6)"
		color7="$(tput AF 7)"
	fi
	fg="${reset}"
	black="${reset}${bold}${color0}"
	red="${reset}${bold}${color1}"
	green="${reset}${bold}${color2}"
	yellow="${reset}${bold}${color3}"
	blue="${reset}${bold}${color4}"
	purple="${reset}${bold}${color5}"
	cyan="${reset}${bold}${color6}"
	white="${reset}${bold}${color7}"
	[ -n "$(grep -i ghostbsd /boot/loader.conf)" ] && OS="GhostBSD"
	PAKKER=$(pkg info|wc -l|awk '{print $1}')
	MINNE="$(top -d 1|awk '/Mem/{print $2}') / $(awk '/real memory/{print $5}' /var/run/dmesg.boot|cut -b2-)M"
	;;
DragonFly)
	OS="DragonFly BSD"
	PAKKER=$(pkg info|wc -l|awk '{print $1}')
	MINNE="$(top -d 1|awk '/Mem/{print $2}') / $(awk '/real memory/{print $5}' /var/run/dmesg.boot|cut -b2-)M"
	;;
Darwin)
	fg="\033[00m"
	red="\033[1;31m"
	green="\033[1;32m"
	yellow="\033[1;33m"
	blue="\033[1;34m"
	purple="\033[1;35m"
	cyan="\033[1;36m"
	white="\033[1;37m"
	PAKKER=$(brew list|wc -l|awk '{print $1}')
	RAM1=$(top -l 1 -s 0|awk '/PhysMem/{print $2}'|sed 's/M//')
	RAM2=$(top -l 1 -s 0|awk '/PhysMem/{print $6}'|sed 's/M//')
	TOTALMINNE=$((RAM1 + RAM2))
	MINNE="${RAM1}M / ${TOTALMINNE}M"
	;;
Linux)
	if [ -x "$(command -v tput)" ]; then
		reset="$(tput sgr0)"
		bold="$(tput bold)"
		color0="$(tput setaf 0)"
		color1="$(tput setaf 1)"
		color2="$(tput setaf 2)"
		color3="$(tput setaf 3)"
		color4="$(tput setaf 4)"
		color5="$(tput setaf 5)"
		color6="$(tput setaf 6)"
		color7="$(tput setaf 7)"
	fi
	fg="${reset}"
	black="${reset}${bold}${color0}"
	red="${reset}${bold}${color1}"
	green="${reset}${bold}${color2}"
	yellow="${reset}${bold}${color3}"
	blue="${reset}${bold}${color4}"
	purple="${reset}${bold}${color5}"
	cyan="${reset}${bold}${color6}"
	white="${reset}${bold}${color7}"
	[ -f /etc/os-release ] && OS="$(head -1 /etc/os-release|cut -d "=" -f2-|sed -e 's/\"//g') $(grep 'VERSION_ID=' /etc/os-release|cut -d "=" -f2-|sed -e 's/\"//g')"
	[ -x "$(command -v lsb_release)" ] && OS=$(lsb_release -sd|sed -e 's/\"//g')
	[ -x "$(command -v apk)" ] && PAKKER=$(apk list|grep installed|wc -l)
	[ -x "$(command -v pacman)" ] && PAKKER=$(pacman -Q|wc -l)
	[ -x "$(command -v dpkg)" ] && PAKKER=$(dpkg --get-selections|wc -l)
	[ -x "$(command -v rpm)" ] && PAKKER=$(rpm -qa|wc -l)
	[ -x "$(command -v eopkg)" ] && PAKKER=$(ls /var/lib/eopkg/package|wc -l)
	[ -x "$(command -v xbps-query)" ] && PAKKER=$(xbps-query -l|wc -l)
	MINNE="$(free -m|awk '/Mem:/{print $3 "M / " $2}')M"
	[ "$(grep "ID=" /etc/os-release|grep -v VERSION|cut -d "=" -f2-)" = "alpine" ] || OPPETID="$(uptime -p | sed 's/up //')"
	;;
esac

case "$SHELL" in
*bash)
	SKALL="bash $(bash --version|head -1|awk '{print $4}'|cut -f1 -d"(")"
	;;
*zsh)
	SKALL="zsh $(zsh --version|awk '{print $2}')"
	;;
*fish)
	SKALL="fish $(fish --version|awk '{print $3}')"
	;;
*)
	SKALL=$(echo $SHELL|grep -o 'bin.*'|sed -e 's/bin//' -e 's/\///')
esac

case "$OS" in
*BSD)
	line1='████   ███ ███  '
	line2='█   █ █    █  █ '
	line3='████  ████ █  ██'
	line4='█   █    █ █  █ '
	line5='████  ███  ███  '
	echo "$red $line1  $blue$USER$fg@$green$(hostname -s)"
	echo "$red $line2 $purple os     $fg$OS"
	echo "$red $line2 $purple kernel $fg$KJERNE"
	echo "$red $line3 $purple shell  $fg$SKALL"
	echo "$red $line4 $purple pkgs   $fg$PAKKER"
	echo "$red $line4 $purple uptime $fg$OPPETID"
	echo "$red $line5 $purple memory $fg$MINNE"
	echo "$fg"
	;;
Darwin)
	echo "                 $blue$USER$fg@$green$(hostname -s)"
	echo "$green     ,--.$red/$green,-.   $purple os     $fg$OS"
	echo "$green    /,-._.--~\  $purple kernel $fg$KJERNE"
	echo "$yellow     __}  {     $purple shell  $fg$SKALL"
	echo "$green    "\\\`"-._,-"$yellow\`"$green-,  $purple pkgs   $fg$PAKKER"
	echo "$green     "\`"._,._,"\'"   $purple uptime $fg$OPPETID"
	echo "                $purple memory $fg$MINNE"
	echo "$fg"
	;;
*)
	echo "$white       .--.      $blue$USER$fg@$green$(hostname)"
	echo "$white      |o${yellow}_${white}o |    $purple os     $fg$OS"
	echo "$white      |${yellow}:_/$white |    $purple kernel $fg$KJERNE"
	echo "$white     //   \ \   $purple shell  $fg$SKALL"
	echo "$white    (|     | )  $purple pkgs   $fg$PAKKER"
	echo "$yellow   /'\_   _/"\`"\  $purple uptime $fg$OPPETID"
	echo "$yellow   \___)${white}=${yellow}(___/  $purple memory $fg$MINNE"
	echo "$fg"
	;;
esac
